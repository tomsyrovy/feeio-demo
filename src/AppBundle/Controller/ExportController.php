<?php

namespace AppBundle\Controller;

use AppBundle\DependencyInjection\Authorization\AuthorizationChecker;
use AppBundle\DependencyInjection\CommissionManager\CommissionManager;
use AppBundle\DependencyInjection\ControllerRedirect;
use AppBundle\Library\Slug;
use AppBundle\Entity\Commission;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use TableBundle\DependencyInjection\TableData;
use UserBundle\Entity\User;

/**
 * Export controller.
 */
class ExportController extends BaseController
{

    /**
     * @Route("/export/xls/commission/{commission_id}/timesheets")
     *
     * @return Response
     */
    public function timesheetsOfCommissionAction($commission_id){

        $return = $this->initTimesheetListYearmonth($commission_id);

        if($return['controllerRedirect'] instanceof ControllerRedirect){

            $this->addFlash($return['controllerRedirect']->getFlashType(), $return['controllerRedirect']->getFlashMessage());

            return $this->redirectToRoute($return['controllerRedirect']->getRedirectRoute(), $return['controllerRedirect']->getRedirectRoute()->getParams());

        }

        /** @var User $user */
        $user = $return['variables']['user'];
        /** @var Commission $commission */
        $commission = $return['variables']['commission'];

        //TODO - vyřešit problém s kódováním
//        $author = $user->getFullname();
//        $author = mb_convert_encoding($author, 'ISO-8859-1', 'UTF-8');
        $author = "Feeio";

        //TODO - CompanyName se neukládá korektně
        $companyName = $commission->getCompany()->getName();

        $title = Slug::getSlug($commission->getName());

        //TODO - generování XLS zjednodušit a převést do jiné třídy
        // ask the service for a Excel5
        $phpExcelObject = $this->get('phpexcel')->createPHPExcelObject();

        $phpExcelObject->getProperties()->setCreator($author)
                       ->setLastModifiedBy($author)
                       ->setTitle($title)
                       ->setSubject($title)
                       ->setDescription("Document ".$title." generated by Feeio (www.feeio.com). ")
                       ->setKeywords($title." feeio")
                       ->setCompany($companyName);

        $styleArrayTotal = array(
            'font'  => array(
                'bold'  => true,
                'size'  => 12,
            ));

        $styleArrayGrandTotal = array(
            'font'  => array(
                'bold'  => true,
                'size'  => 14,
            ));

        $styleArrayHeader = array(
            'font'  => array(
                'bold'  => true,
                'size'  => 14,
            ));

        //TODO - zajistit generování podle nastavení sloupců uživatele
        // == začátek plnění dat
        $phpExcelObject->setActiveSheetIndex(0);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety');

        $r = 1;
        $c = 0;
        $grandTotal = 0;

        foreach($return['data']['tableData']['table']->getTableDefaultColumns() as $column){

//            if(!isset($return['data']['tableData']['userDefaultColumns'][$column->getId()]) or !$return['data']['tableData']['userDefaultColumns'][$column->getId()]->getHidden()){
                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
                $c++;
//            }

        }
        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - zobrazení sloupce pro formulu
//            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
            $c++;

        }

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        foreach($return['data']['timesheets'] as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getAuthor()->getFullname());
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $activity = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $activity);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);
            $c++;

            foreach($return['data']['tableData']['userColumns'] as $column){

                //TODO - Výpočet z formuly
                $c++;

            }

            $r++;

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);
        $c++;

        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - Výpočet z formuly
            $c++;

        }

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        //Druhý list
        $timesheets = $return['data']['timesheets'];
        usort($timesheets, array($this, "cmpByActivity"));

        //TODO - zajistit generování podle nastavení sloupců uživatele
        // == začátek plnění dat
        $phpExcelObject->createSheet();
        $phpExcelObject->setActiveSheetIndex(1);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety podle aktivit');

        $r = 1;
        $c = 0;
        $grandTotal = 0;

        foreach($return['data']['tableData']['table']->getTableDefaultColumns() as $column){

//            if(!isset($return['data']['tableData']['userDefaultColumns'][$column->getId()]) or !$return['data']['tableData']['userDefaultColumns'][$column->getId()]->getHidden()){
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
            $c++;
//            }

        }
        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - zobrazení sloupce pro formulu
//            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
            $c++;

        }

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        $total = 0;

        $i = 0;
        foreach($timesheets as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getAuthor()->getFullname());
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $activity = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $activity);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $total = $total + $duration;
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);
            $c++;

            foreach($return['data']['tableData']['userColumns'] as $column){

                //TODO - Výpočet z formuly
                $c++;

            }

            $i++;

            $r++;

            $activity = $row->getActivity();

            if(count($timesheets) === $i or (isset($timesheets[$i]) and $timesheets[$i]->getActivity() !== $activity)){

                $c = 0;
                $activityName = $activity ? $activity->getName() : '';
                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem '.$activityName);
                $c++;
                $c++;
                $c++;
                $c++;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $total);
                $c++;

                foreach($return['data']['tableData']['userColumns'] as $column){

                    //TODO - Výpočet z formuly
                    $c++;

                }

                //Stylování total řádku
                $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayTotal);

                $total = 0;

                $r++;

            }

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);
        $c++;

        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - Výpočet z formuly
            $c++;

        }

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        //Třetí list
        $timesheets = $return['data']['timesheets'];
        usort($timesheets, array($this, "cmpByAuthor"));

        //TODO - zajistit generování podle nastavení sloupců uživatele
        // == začátek plnění dat
        $phpExcelObject->createSheet();
        $phpExcelObject->setActiveSheetIndex(2);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety podle lidí');

        $r = 1;
        $c = 0;
        $grandTotal = 0;

        foreach($return['data']['tableData']['table']->getTableDefaultColumns() as $column){

//            if(!isset($return['data']['tableData']['userDefaultColumns'][$column->getId()]) or !$return['data']['tableData']['userDefaultColumns'][$column->getId()]->getHidden()){
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
            $c++;
//            }

        }
        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - zobrazení sloupce pro formulu
//            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
            $c++;

        }

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        $total = 0;

        $i = 0;
        foreach($timesheets as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getAuthor()->getFullname());
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $activity = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $activity);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $total = $total + $duration;
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);
            $c++;

            foreach($return['data']['tableData']['userColumns'] as $column){

                //TODO - Výpočet z formuly
                $c++;

            }

            $i++;

            $r++;

            $user = $row->getAuthor();

            if(count($timesheets) === $i or (isset($timesheets[$i]) and $timesheets[$i]->getAuthor() !== $user)){

                $c = 0;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem '.$user->getFullname());
                $c++;
                $c++;
                $c++;
                $c++;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $total);
                $c++;

                foreach($return['data']['tableData']['userColumns'] as $column){

                    //TODO - Výpočet z formuly
                    $c++;

                }

                //Stylování total řádku
                $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayTotal);

                $total = 0;

                $r++;

            }

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);
        $c++;

        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - Výpočet z formuly
            $c++;

        }

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        //Čtvrtý list
        $timesheets = $return['data']['timesheets'];
        usort($timesheets, array($this, "cmpByDay"));

        //TODO - zajistit generování podle nastavení sloupců uživatele
        // == začátek plnění dat
        $phpExcelObject->createSheet();
        $phpExcelObject->setActiveSheetIndex(3);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety podle dní');

        $r = 1;
        $c = 0;
        $grandTotal = 0;

        foreach($return['data']['tableData']['table']->getTableDefaultColumns() as $column){

//            if(!isset($return['data']['tableData']['userDefaultColumns'][$column->getId()]) or !$return['data']['tableData']['userDefaultColumns'][$column->getId()]->getHidden()){
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
            $c++;
//            }

        }
        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - zobrazení sloupce pro formulu
//            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $column->getTitle());
            $c++;

        }

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        $total = 0;

        $i = 0;
        foreach($timesheets as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getAuthor()->getFullname());
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $activity = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $activity);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $total = $total + $duration;
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);
            $c++;

            foreach($return['data']['tableData']['userColumns'] as $column){

                //TODO - Výpočet z formuly
                $c++;

            }

            $i++;

            $r++;

            $day = $row->getDate()->format('j. n. Y');

            if(count($timesheets) === $i or (isset($timesheets[$i]) and $timesheets[$i]->getDate()->format('j. n. Y') !== $day)){

                $c = 0;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem '.$day);
                $c++;
                $c++;
                $c++;
                $c++;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $total);
                $c++;

                foreach($return['data']['tableData']['userColumns'] as $column){

                    //TODO - Výpočet z formuly
                    $c++;

                }

                //Stylování total řádku
                $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayTotal);

                $total = 0;

                $r++;

            }

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);
        $c++;

        foreach($return['data']['tableData']['userColumns'] as $column){

            //TODO - Výpočet z formuly
            $c++;

        }

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        // == konec plnění dat

        // Set active sheet index to the first sheet, so Excel opens this as the first sheet
        $phpExcelObject->setActiveSheetIndex(0);

        // Auto size columns for each worksheet
        foreach ($phpExcelObject->getWorksheetIterator() as $worksheet) {

            $phpExcelObject->setActiveSheetIndex($phpExcelObject->getIndex($worksheet));

            $sheet = $phpExcelObject->getActiveSheet();
            $cellIterator = $sheet->getRowIterator()->current()->getCellIterator();
            $cellIterator->setIterateOnlyExistingCells(true);
            /** @var \PHPExcel_Cell $cell */
            foreach ($cellIterator as $cell) {
                $sheet->getColumnDimension($cell->getColumn())->setAutoSize(true);
            }
        }

        $filename = $title.'.xls';
        header('Content-Description: File Transfer');
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment; filename="'.$filename.'"');
        header('Content-Transfer-Encoding: binary');
        header('Connection: Keep-Alive');
        header('Expires: 0');
        header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
        header('Pragma: public');

        $objWriter = new \PHPExcel_Writer_Excel5($phpExcelObject);
        $objWriter->save('php://output');
        exit;

    }

    private function cmpByActivity($a, $b)
    {
        $activityA = $a->getActivity() ? $a->getActivity()->getName() : '';
        $activityB = $b->getActivity() ? $b->getActivity()->getName() : '';
        return strcmp($activityA, $activityB);
    }

    private function cmpByAuthor($a, $b)
    {
        return strcmp($a->getAuthor()->getLastname(), $b->getAuthor()->getLastname());
    }

    private function cmpByCommission($a, $b)
    {
        return strcmp($a->getCommission()->getName(), $b->getCommission()->getName());
    }

    private function cmpByDay($a, $b)
    {
        return strcmp($a->getDate()->format('Y-m-d'), $b->getDate()->format('Y-m-d'));
    }


    private function initTimesheetListYearmonth($commission_id){

        $cr = false;

        $user = $this->getUser();

        $em = $this->getDoctrine()->getEntityManager();

        $commission = $em->getRepository('AppBundle:Commission')->find($commission_id);

        if(!$commission){

            $cr = new ControllerRedirect('danger', 'Tato zakázka neexistuje.', 'app_commission_list');

        }

        //TODO - oprávnění, že můžu exportovat

        $criteria = [
            'commission' => $commission
        ];
        $orderBy = [
            'date' => 'ASC',
        ];
        $timesheets = $em->getRepository('AppBundle:Timesheet')->findBy($criteria, $orderBy);

        //TODO - odstranit $tableData
        $tableData = TableData::getData($em, $user, 'table-timesheetlistyearmonth');

        //Přepravka (simple)
        $data = [
            'timesheets' => $timesheets,
            'tableData' => $tableData,
            'commission' => $commission,
        ];

        $return = [];
        $return['controllerRedirect'] = $cr;
        $return['variables'] = [];
        $return['variables']['em'] = $em;
        $return['variables']['user'] = $user;
        $return['variables']['commission'] = $commission;
        $return['data'] = $data;

//        dump($timesheets);exit;

        return $return;

    }

    /**
     * @Route("/export/xls/user/{user_id}/{yearmonth_id}/timesheets")
     *
     * @return Response
     */
    public function timesheetsOfUserInYearMonth($user_id, $yearmonth_id){

        $em = $this->getDoctrine()->getManager();

        $user = $em->getRepository('UserBundle:User')->find($user_id);
        $yearmonth = $em->getRepository('AppBundle:YearMonth')->find($yearmonth_id);

        if(!$user or !$yearmonth){
            return $this->redirectToRoute('app_default_index');
        }

        $timesheets = $em->getRepository('AppBundle:Timesheet')->findByUserAndYearmonth($user, $yearmonth);

        $commissionManager = new CommissionManager($em);
        $commissionWhereParticipate = $commissionManager->getCommissionsWhereParticipate($this->getUser());

        $timesheets = array_filter($timesheets, function($entry) use ($commissionWhereParticipate) {
            return in_array($entry->getCommission(), $commissionWhereParticipate, true);
        });

        //TODO - vyřešit problém s kódováním
//        $author = $user->getFullname();
//        $author = mb_convert_encoding($author, 'ISO-8859-1', 'UTF-8');
        $author = "Feeio";

        $title = Slug::getSlug($user->getFullName().'-'.$yearmonth->getCode());

        //TODO - generování XLS zjednodušit a převést do jiné třídy
        // ask the service for a Excel5
        $phpExcelObject = $this->get('phpexcel')->createPHPExcelObject();

        $phpExcelObject->getProperties()->setCreator($author)
                       ->setLastModifiedBy($author)
                       ->setTitle($title)
                       ->setSubject($title)
                       ->setDescription("Document ".$title." generated by Feeio (www.feeio.com). ")
                       ->setKeywords($title." feeio");

        $styleArrayTotal = array(
            'font'  => array(
                'bold'  => true,
                'size'  => 12,
            ));

        $styleArrayGrandTotal = array(
            'font'  => array(
                'bold'  => true,
                'size'  => 14,
            ));

        $styleArrayHeader = array(
            'font'  => array(
                'bold'  => true,
                'size'  => 14,
            ));

        // == začátek plnění dat
        $phpExcelObject->setActiveSheetIndex(0);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety');

        $r = 1;
        $c = 0;
        $grandTotal = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Zakázka');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Datum');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Činnost');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Popis');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Strávený čas');

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        foreach($timesheets as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getCommission()->getName().' ('.$row->getCommission()->getNameOwn().')');
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $name = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $name);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);

            $r++;

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        //Druhý list
        usort($timesheets, array($this, "cmpByActivity"));

        // == začátek plnění dat
        $phpExcelObject->createSheet();
        $phpExcelObject->setActiveSheetIndex(1);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety podle aktivit');

        $r = 1;
        $c = 0;
        $grandTotal = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Zakázka');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Datum');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Činnost');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Popis');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Strávený čas');

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        $total = 0;

        $i = 0;
        foreach($timesheets as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getCommission()->getName().' ('.$row->getCommission()->getNameOwn().')');
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $activity = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $activity);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $total = $total + $duration;
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);
            $c++;

            $i++;

            $r++;

            $activity = $row->getActivity();

            if(count($timesheets) === $i or (isset($timesheets[$i]) and $timesheets[$i]->getActivity() !== $activity)){

                $c = 0;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem '.$activity->getName());
                $c++;
                $c++;
                $c++;
                $c++;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $total);
                $c++;

                //Stylování total řádku
                $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayTotal);

                $total = 0;

                $r++;

            }

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);
        $c++;

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        //Třetí list
        usort($timesheets, array($this, "cmpByCommission"));

        // == začátek plnění dat
        $phpExcelObject->createSheet();
        $phpExcelObject->setActiveSheetIndex(2);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety podle zakázek');

        $r = 1;
        $c = 0;
        $grandTotal = 0;
        $grandTotal2 = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Zakázka');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Datum');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Činnost');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Popis');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Strávený čas');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Alokovaný čas (pouze pro zakázky, kde je alespoň jeden timesheet)');

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        $total = 0;

        $i = 0;
        foreach($timesheets as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getCommission()->getName().' ('.$row->getCommission()->getNameOwn().')');
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $activity = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $activity);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $total = $total + $duration;
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);
            $c++;

            $i++;

            $r++;

            $commission = $row->getCommission();

            if(count($timesheets) === $i or (isset($timesheets[$i]) and $timesheets[$i]->getCommission() !== $commission)){

                $c = 0;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem '.$commission->getName().' ('.$commission->getNameOwn().')');
                $c++;
                $c++;
                $c++;
                $c++;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $total);
                $c++;

                $criteria = [
                    'user' => $user,
                    'company' => $commission->getCompany(),
                ];
                $userCompany = $em->getRepository('AppBundle:UserCompany')->findOneBy($criteria);
                if($userCompany){
                    $criteria = [
                        'userCompany' => $userCompany,
                        'commission' => $commission,
                        'yearMonth' => $yearmonth
                    ];
                    $au = $em->getRepository('AppBundle:AllocationUnit')->findOneBy($criteria);
                    if($au){
                        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $au->getHoursPlan());
                        $c++;
                        $grandTotal2 = $grandTotal2 + $au->getHoursPlan();
                    }
                }

                //Stylování total řádku
                $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayTotal);

                $total = 0;

                $r++;

            }

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);
        $c++;
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal2);
        $c++;

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        //Čtvrtý list
        usort($timesheets, array($this, "cmpByDay"));

        // == začátek plnění dat
        $phpExcelObject->createSheet();
        $phpExcelObject->setActiveSheetIndex(3);
        $phpExcelObject->getActiveSheet()->setTitle('Timesheety podle dní');

        $r = 1;
        $c = 0;
        $grandTotal = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Zakázka');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Datum');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Činnost');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Popis');
        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c++, $r, 'Strávený čas');

        //Ukládáme počet sloupců do proměnné ve formě písmena
        $cCount = chr(64 + $c);

        //Stylování prvního řádku
        $phpExcelObject->getActiveSheet()->getStyle('A1:'.$cCount.'1')->applyFromArray($styleArrayHeader);

        $r++;

        $total = 0;

        $i = 0;
        foreach($timesheets as $row){

            $c = 0;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getCommission()->getName().' ('.$row->getCommission()->getNameOwn().')');
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDate()->format('j. n. Y'));
            $c++;

            $activity = $row->getActivity() ? $row->getActivity()->getName() : '';
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $activity);
            $c++;

            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $row->getDescription());
            $c++;

            $duration = $row->getDuration();
            $duration = round($duration/60, 2);
            $total = $total + $duration;
            $grandTotal = $grandTotal + $duration;
            $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $duration);
            $c++;

            $i++;

            $r++;

            $day = $row->getDate()->format('j. n. Y');

            if(count($timesheets) === $i or (isset($timesheets[$i]) and $timesheets[$i]->getDate()->format('j. n. Y') !== $day)){

                $c = 0;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem '.$day);
                $c++;
                $c++;
                $c++;
                $c++;

                $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $total);
                $c++;

                //Stylování total řádku
                $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayTotal);

                $total = 0;

                $r++;

            }

        }

        //Sumace
        $c = 0;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, 'Celkem');
        $c++;
        $c++;
        $c++;
        $c++;

        $phpExcelObject->getActiveSheet()->setCellValueByColumnAndRow($c, $r, $grandTotal);
        $c++;

        //Stylování grandtotal řádku
        $phpExcelObject->getActiveSheet()->getStyle('A'.$r.':'.$cCount.$r)->applyFromArray($styleArrayGrandTotal);

        // == konec plnění dat

        // Set active sheet index to the first sheet, so Excel opens this as the first sheet
        $phpExcelObject->setActiveSheetIndex(0);

        // Auto size columns for each worksheet
        foreach ($phpExcelObject->getWorksheetIterator() as $worksheet) {

            $phpExcelObject->setActiveSheetIndex($phpExcelObject->getIndex($worksheet));

            $sheet = $phpExcelObject->getActiveSheet();
            $cellIterator = $sheet->getRowIterator()->current()->getCellIterator();
            $cellIterator->setIterateOnlyExistingCells(true);
            /** @var \PHPExcel_Cell $cell */
            foreach ($cellIterator as $cell) {
                $sheet->getColumnDimension($cell->getColumn())->setAutoSize(true);
            }
        }

        $filename = $title.'.xls';
        header('Content-Description: File Transfer');
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment; filename="'.$filename.'"');
        header('Content-Transfer-Encoding: binary');
        header('Connection: Keep-Alive');
        header('Expires: 0');
        header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
        header('Pragma: public');

        $objWriter = new \PHPExcel_Writer_Excel5($phpExcelObject);
        $objWriter->save('php://output');
        exit;

    }

	/**
	 * @Route("/commission/{commission_id}/detail/{allocation_id}/export/xls/{type}", name="app_commission_detail_allocation_export")
	 *
	 * @return Response
	 */
	public function exportXlsAction($commission_id, Request $request, $allocation_id, $type){

		$em = $this->getDoctrine()->getManager();

		$commission = $em->getRepository('AppBundle:Commission')->find($commission_id);

		if(!$commission){
			return $this->redirectToRoute('app_client_list');
		}

		$user = $this->getUser();
		$companies = $user->getCompaniesEnabled();
		$company = $commission->getCampaign()->getClient()->getCompany();

		//Kontakt je ve společnosti, do které uživatel nemá přístup
		if(!$companies->contains($company)){
			return $this->redirectToRoute('app_client_list');
		}

		$authorizationChecker = new AuthorizationChecker($em);
		$check = $authorizationChecker->checkAuthorizationCodeOfUserInCompany('commission-read', $user, $company);

		if(!$check){
			return $this->redirectToRoute('app_client_list');
		}

		$allocationContainer = $em->getRepository('AppBundle:AllocationContainer')->find($allocation_id);

		if(!$allocationContainer || $allocationContainer->getCommission() !== $commission){
			return $this->redirectToRoute('app_client_list');
		}

		//TODO - vyřešit problém s kódováním
//        $author = $user->getFullname();
//        $author = mb_convert_encoding($author, 'ISO-8859-1', 'UTF-8');
		$author = "Feeio";

		$title = Slug::getSlug($commission->getName());

		//TODO - generování XLS zjednodušit a převést do jiné třídy
		// ask the service for a Excel5
		$phpExcelObject = $this->get('phpexcel')->createPHPExcelObject();

		$phpExcelObject->getProperties()->setCreator($author)
		               ->setLastModifiedBy($author)
		               ->setTitle($title)
		               ->setSubject($title)
		               ->setDescription("Document ".$title." generated by Feeio (www.feeio.com). ")
		               ->setKeywords($title." feeio");

		$styleArrayTotal = array(
			'font'  => array(
				'bold'  => true,
				'size'  => 12,
			));

		$styleArrayGrandTotal = array(
			'font'  => array(
				'bold'  => true,
				'size'  => 14,
			));

		$styleArrayHeader = array(
			'font'  => array(
				'bold'  => true,
				'size'  => 14,
			));

		// == začátek plnění dat
		$phpExcelObject->setActiveSheetIndex(0);
		$phpExcelObject->getActiveSheet()->setTitle('Rozpočet');

		$sheet = $phpExcelObject->getActiveSheet();

		$c = 0;
		$r = 1;
		$grandTotal = 0;

		$sheet->getCellByColumnAndRow($c, $r)->setValue('Rozpočet pro '.$commission->getName().' ('.$commission->getNameOwn().')');
		$r++;
		$r++;

		/** @var \AppBundle\Entity\AllocationContainerList $allocationContainerList */
		foreach($allocationContainer->getAllocationContainerLists() as $allocationContainerList){
			if($allocationContainerList->getAllocationContainerListItems()->count() === 0){
				continue;
			}
			$sheet->getCellByColumnAndRow($c, $r)->setValue($allocationContainerList->getName());
			$r++;
			if($type == 'extended'){
				$sheet->getCellByColumnAndRow(0, $r)->setValue('');
				$sheet->getCellByColumnAndRow(1, $r)->setValue('Položka');
				$sheet->getCellByColumnAndRow(2, $r)->setValue('Dodavatel');
				$sheet->getCellByColumnAndRow(3, $r)->setValue('Jednotka');
				$sheet->getCellByColumnAndRow(4, $r)->setValue('Množství / plán');
				$sheet->getCellByColumnAndRow(5, $r)->setValue('Nákupní cena / plán');
				$sheet->getCellByColumnAndRow(6, $r)->setValue('Marže (%) / plán');
				$sheet->getCellByColumnAndRow(7, $r)->setValue('Prodejní cena / plán');
				$sheet->getCellByColumnAndRow(8, $r)->setValue('SUM Nákupní cena / plán');
				$sheet->getCellByColumnAndRow(9, $r)->setValue('SUM Prodejní cena / plán');
				$sheet->getCellByColumnAndRow(10, $r)->setValue('SUM Rozdíl / plán');
				$sheet->getCellByColumnAndRow(11, $r)->setValue('Množství / reál');
				$sheet->getCellByColumnAndRow(12, $r)->setValue('Nákupní cena / reál');
				$sheet->getCellByColumnAndRow(13, $r)->setValue('Marže (%) / reál');
				$sheet->getCellByColumnAndRow(14, $r)->setValue('Prodejní cena / reál');
				$sheet->getCellByColumnAndRow(15, $r)->setValue('SUM Nákupní cena / reál');
				$sheet->getCellByColumnAndRow(16, $r)->setValue('SUM Prodejní cena / reál');
				$sheet->getCellByColumnAndRow(17, $r)->setValue('SUM Rozdíl / reál');
			}else{
				$sheet->getCellByColumnAndRow(0, $r)->setValue('');
				$sheet->getCellByColumnAndRow(1, $r)->setValue('Položka');
				$sheet->getCellByColumnAndRow(2, $r)->setValue('Dodavatel');
				$sheet->getCellByColumnAndRow(3, $r)->setValue('Jednotka');
				$sheet->getCellByColumnAndRow(4, $r)->setValue('Množství');
				$sheet->getCellByColumnAndRow(5, $r)->setValue('Náklad / mj.');
				$sheet->getCellByColumnAndRow(6, $r)->setValue('Marže (%)');
				$sheet->getCellByColumnAndRow(7, $r)->setValue('Výnos / mj.');
				$sheet->getCellByColumnAndRow(8, $r)->setValue('SUM Náklad');
				$sheet->getCellByColumnAndRow(9, $r)->setValue('SUM Výnos');
				$sheet->getCellByColumnAndRow(10, $r)->setValue('SUM Rozdíl');
			}
			$r++;
			/** @var \AppBundle\Entity\AllocationContainerListItem $item */
			foreach($allocationContainerList->getAllocationContainerListItems() as $item){
				if($item->getExternalSource()){
					$t = 'Ext. zdroj';
					$p = $item->getGeneralSourceExt();
					$d = $item->getConcreteSourceExt();
				}else{
					$t = 'Pracovník';
					$p = '';
					if($item->getGeneralSource()){
						if($item->getGeneralSource()->getJobPosition()){
							if($item->getGeneralSource()->getJobPosition()->getName()){
								$p = $item->getGeneralSource()->getJobPosition()->getName();
							}
						}
					}
					$d = '';
					if($item->getConcreteSource()){
						if($item->getConcreteSource()->getFullname()){
							$d = $item->getConcreteSource()->getFullname();
						}
					}
				}
				if($type == 'extended'){
					$sheet->getCellByColumnAndRow(0, $r)->setValue($t); //A
					$sheet->getCellByColumnAndRow(1, $r)->setValue($p); //B
					$sheet->getCellByColumnAndRow(2, $r)->setValue($d); //C
					$sheet->getCellByColumnAndRow(3, $r)->setValue($item->getUnit()); //D
					$sheet->getCellByColumnAndRow(4, $r)->setValue($item->getQuantityPlan()); //E
					$sheet->getCellByColumnAndRow(5, $r)->setValue($item->getBuyingPricePlan()); //F
					$sheet->getCellByColumnAndRow(6, $r)->setValue('=(H'.$r.'-F'.$r.')/F'.$r.'*100'); //G =(H-F)/F*100
					$sheet->getCellByColumnAndRow(7, $r)->setValue($item->getSellingPricePlan()); //H
					$sheet->getCellByColumnAndRow(8, $r)->setValue('=E'.$r.'*F'.$r); //I
					$sheet->getCellByColumnAndRow(9, $r)->setValue('=E'.$r.'*H'.$r); //J
					$sheet->getCellByColumnAndRow(10, $r)->setValue('=J'.$r.'-I'.$r); //K
					$sheet->getCellByColumnAndRow(11, $r)->setValue($item->getQuantityReal()); //L
					$sheet->getCellByColumnAndRow(12, $r)->setValue($item->getByuingPriceReal()); //M
					$sheet->getCellByColumnAndRow(13, $r)->setValue('=(0'.$r.'-M'.$r.')/M'.$r.'*100'); //N
					$sheet->getCellByColumnAndRow(14, $r)->setValue($item->getSellingPriceReal()); //O
					$sheet->getCellByColumnAndRow(15, $r)->setValue('=L'.$r.'*M'.$r); //P
					$sheet->getCellByColumnAndRow(16, $r)->setValue('=L'.$r.'*O'.$r); //Q
					$sheet->getCellByColumnAndRow(17, $r)->setValue('=Q'.$r.'-P'.$r); //R
				}else{
					$sheet->getCellByColumnAndRow(0, $r)->setValue($t); //A
					$sheet->getCellByColumnAndRow(1, $r)->setValue($p); //B
					$sheet->getCellByColumnAndRow(2, $r)->setValue($d); //C
					$sheet->getCellByColumnAndRow(3, $r)->setValue($item->getUnit()); //D
					$sheet->getCellByColumnAndRow(4, $r)->setValue($item->getQuantityPlan()); //E
					$sheet->getCellByColumnAndRow(5, $r)->setValue($item->getBuyingPricePlan()); //F
					$sheet->getCellByColumnAndRow(6, $r)->setValue('=(H'.$r.'-F'.$r.')/F'.$r.'*100'); //G =(H-F)/F*100
					$sheet->getCellByColumnAndRow(7, $r)->setValue($item->getSellingPricePlan()); //H
					$sheet->getCellByColumnAndRow(8, $r)->setValue('=E'.$r.'*F'.$r); //I
					$sheet->getCellByColumnAndRow(9, $r)->setValue('=E'.$r.'*H'.$r); //J
					$sheet->getCellByColumnAndRow(10, $r)->setValue('=J'.$r.'-I'.$r); //K
				}

				$r++;
			}
			$r++;
		}

		// == konec plnění dat

		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$phpExcelObject->setActiveSheetIndex(0);

		// Auto size columns for each worksheet
		foreach ($phpExcelObject->getWorksheetIterator() as $worksheet) {

			$phpExcelObject->setActiveSheetIndex($phpExcelObject->getIndex($worksheet));

			$sheet = $phpExcelObject->getActiveSheet();
			$cellIterator = $sheet->getRowIterator()->current()->getCellIterator();
			$cellIterator->setIterateOnlyExistingCells(true);
			/** @var \PHPExcel_Cell $cell */
			foreach ($cellIterator as $cell) {
				$sheet->getColumnDimension($cell->getColumn())->setAutoSize(true);
			}
		}

		$filename = $title.'.xls';
		header('Content-Description: File Transfer');
		header('Content-Type: application/vnd.ms-excel');
		header('Content-Disposition: attachment; filename="'.$filename.'"');
		header('Content-Transfer-Encoding: binary');
		header('Connection: Keep-Alive');
		header('Expires: 0');
		header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
		header('Pragma: public');

		$objWriter = new \PHPExcel_Writer_Excel5($phpExcelObject);
		$objWriter->save('php://output');
		exit;

	}

}
