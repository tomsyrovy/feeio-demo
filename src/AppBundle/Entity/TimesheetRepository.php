<?php

namespace AppBundle\Entity;

use AppBundle\DependencyInjection\ORM\EntityRepositoryTool;
use AppBundle\DependencyInjection\ORM\EntityRepositoryToolInterface;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use UserBundle\Entity\User;

/**
 * TimesheetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TimesheetRepository extends EntityRepository implements EntityRepositoryToolInterface
{

	private static $SUMARIZATIONS = [
		'duration',
	];

	/**
	 * @return array
	 */
	public function getSumarizations(){

		return self::$SUMARIZATIONS;

	}

	public function findByGroupedBy($criteria, $orderBy, $groupByReference, $groupByColumnName){

		$entityRepositoryTool = new EntityRepositoryTool($this->getEntityManager(), 'AppBundle:'.$this->getClassMetadata()->getTableName(), $this);

		return $entityRepositoryTool->findByGroupedBy($criteria, $orderBy, $groupByReference, $groupByColumnName);

	}

	public function findByCommission(Commission $commission){

		$qb = new QueryBuilder($this->_em);
		$qb
			->select('t AS timesheet, SUM(t.duration) AS duration_sum, COUNT(t.id) AS timesheet_count')
			->from('AppBundle:Timesheet', 't')
			->where('t.commission = :commission')
			->groupBy('t.yearmonth')
			->setParameter('commission', $commission);

		return $qb->getQuery()->getResult();
	}

	public function findByCommissionAndTimeWindow(Commission $commission, TimeWindow $timeWindow){

		$qb = new QueryBuilder($this->_em);
		$qb
			->select('t AS timesheet, SUM(t.duration) AS duration_sum, COUNT(t.id) AS timesheet_count')
			->from('AppBundle:Timesheet', 't')
			->where('t.commission = :commission')
			->andWhere('t.yearmonth >= :yearmonth1')
			->andWhere('t.yearmonth <= :yearmonth2')
			->groupBy('t.yearmonth')
			->setParameter('commission', $commission)
			->setParameter('yearmonth1', $timeWindow->getYearmonthFrom())
			->setParameter('yearmonth2', $timeWindow->getYearmonthTo());

		return $qb->getQuery()->getResult();
	}

	public function findByUserAndTimeWindow(User $user, TimeWindow $timeWindow){

		$qb = new QueryBuilder($this->_em);
		$qb
			->select('t')
			->from('AppBundle:Timesheet', 't')
			->where('t.author = :user')
			->andWhere('t.yearmonth >= :yearmonth1')
			->andWhere('t.yearmonth <= :yearmonth2')
			->orderBy('t.date', 'DESC')
			->setParameter('user', $user)
			->setParameter('yearmonth1', $timeWindow->getYearmonthFrom())
			->setParameter('yearmonth2', $timeWindow->getYearmonthTo());

		return $qb->getQuery()->getResult();
	}

	public function findByUserCompany(UserCompany $userCompany){

		$qb = new QueryBuilder($this->_em);
		$qb
			->select('t AS timesheet, SUM(t.duration) AS duration_sum, COUNT(t.id) AS timesheet_count')
			->from('AppBundle:Timesheet', 't')
			->join('t.commission', 'c')
			->where('t.author = :author')
			->andWhere('c.company = :company')
			->groupBy('t.yearmonth')
			->setParameter('author', $userCompany->getUser())
			->setParameter('company', $userCompany->getCompany());

		return $qb->getQuery()->getResult();
	}

	public function findByUserCompanyAndYearmonth(UserCompany $userCompany, YearMonth $yearMonth){

		$qb = new QueryBuilder($this->_em);
		$qb
			->select('t AS timesheet')
			->from('AppBundle:Timesheet', 't')
			->join('t.commission', 'c')
			->where('t.author = :author')
			->andWhere('c.company = :company')
			->andWhere('t.yearmonth = :yearmonth')
			->setParameter('author', $userCompany->getUser())
			->setParameter('company', $userCompany->getCompany())
			->setParameter('yearmonth', $yearMonth);

		return $qb->getQuery()->getResult();
	}

	public function findByUserAndYearmonth(User $user, YearMonth $yearMonth){

		$qb = new QueryBuilder($this->_em);
		$qb
			->select('t')
			->from('AppBundle:Timesheet', 't')
			->join('t.commission', 'c')
			->where('t.author = :author')
			->andWhere('t.yearmonth = :yearmonth')
			->setParameter('author', $user)
			->setParameter('yearmonth', $yearMonth);

		return $qb->getQuery()->getResult();
	}

	public function findByCommissionAndYearmonth(Commission $commission, YearMonth $yearMonth){

		$qb = new QueryBuilder($this->_em);
		$qb
			->select('t AS timesheet')
			->from('AppBundle:Timesheet', 't')
			->where('t.commission = :commission')
			->andWhere('t.yearmonth = :yearmonth')
			->setParameter('commission', $commission)
			->setParameter('yearmonth', $yearMonth);

		return $qb->getQuery()->getResult();
	}

}
